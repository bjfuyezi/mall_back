<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">
    <!-- 定义结果映射 -->
    <resultMap id="UserResultMap" type="com.example.demo.pojo.User">
        <id column="user_id" property="user_id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="email" property="email"/>
        <result column="role" property="role"/>
        <result column="status" property="status"/>
        <result column="created_time" property="created_time"/>
        <result column="updated_time" property="updated_time"/>
    </resultMap>

    <!-- 使用结果映射 -->
    <select id="selectById" parameterType="int" resultMap="UserResultMap">
        SELECT * FROM users WHERE user_id = #{user_id}
    </select>

    <select id="selectByUsername" parameterType="String" resultMap="UserResultMap">
        SELECT * FROM users WHERE username = #{username}
    </select>

    <select id="selectAll" resultMap="UserResultMap">
        SELECT * FROM users
    </select>

    <select id="selectByEmail" parameterType="String" resultMap="UserResultMap">
        SELECT * FROM users WHERE email = #{email}
    </select>

    <!-- 更新用户信息 -->
    <update id="updateUser" parameterType="com.example.demo.pojo.User">
        UPDATE users
        SET username = #{username},
            email = #{email},
            role = #{role},
            status = #{status},
            updated_time = NOW()
        WHERE user_id = #{user_id}
    </update>

    <!-- 插入新用户 -->
    <insert id="insertUser" parameterType="com.example.demo.pojo.User" 
            useGeneratedKeys="true" keyProperty="user_id">
        INSERT INTO users (username, password, email, role, status, created_time, updated_time)
        VALUES (#{username}, #{password}, #{email}, #{role}, #{status}, NOW(), NOW())
    </insert>

    <!-- 更新用户个人资料 -->
    <update id="updateUserProfile" parameterType="com.example.demo.pojo.User">
        UPDATE users 
        SET email = #{email},
            password = CASE WHEN #{password} != '' THEN #{password} ELSE password END,
            updated_time = NOW()
        WHERE user_id = #{user_id}
    </update>

    <update id="updatePassword" parameterType="com.example.demo.pojo.User">
        UPDATE users 
        SET password = #{password},
            updated_time = NOW()
        WHERE username = #{username}
    </update>
</mapper>
